---
- name: install package
  become: yes
  yum: name={{ item }} state=present
  with_items:
    - autoconf
    - gdbm-devel
    - libffi-devel
    - libyaml-devel
    - ncurses-devel
    - openssl-devel
    - readline-devel
    - bzip2-devel
    - gcc
    - git
    - make
    - perl-Digest

- name: set deploy user
  set_fact: deploy_user={{ rbenv.deploy_user | default("root") }}

- name: clone this project
  become: no
  become_user: "{{ deploy_user }}"
  git: >
        repo=https://github.com/rbenv/rbenv.git
        dest={{ rbenv.install_dir }} update=no

- name: clone this project (build environment)
  become_user: "{{ deploy_user }}"
  git: >
        repo=https://github.com/rbenv/ruby-build.git
        dest={{ rbenv.install_dir }}plugins/ruby-build/ update=no

- name: generate setup script ==> /etc/profile.d/rbenv_setup.sh
  become: yes
  template: src=bash/rbenv_setup.sh dest=/etc/profile.d/

- name: build ruby ({{ rbenv.ruby.install_versions }})
  become_user: "{{ deploy_user }}"
  shell: >
          $SHELL --login -c 'rbenv versions | \grep {{ item }}
          || {{ rbenv.ruby.make_opts }} rbenv install {{ item }}'
  with_items: "{{ rbenv.ruby.install_versions }}"

- name: set global environment ({{ rbenv.ruby.global }})
  become_user: "{{ deploy_user }}"
  shell: $SHELL --login -c 'rbenv global {{ rbenv.ruby.global }}'

- name: set local environment
  become_user: "{{ deploy_user }}"
  shell: >
          $SHELL --login -c 'rbenv local {{ item.key }}'
          chdir={{ item.value }}
  with_dict: "{{ rbenv.ruby.local }}"
  when: rbenv.ruby.local.enabled

- name: install gem * package (parameter > state)
  become_user: "{{ deploy_user }}"
  gem: >
        name={{ item.key }} state={{ item.value.version }}
        executable={{ rbenv.install_dir }}shims/gem user_install=no
  when: item.value.version in ["present", "absent", "latest"]
  with_dict: "{{ rbenv.gem }}"

- name: install gem * package (parameter > version)
  become_user: "{{ deploy_user }}"
  gem: >
        name={{ item.key }} version={{ item.value.version }}
        executable={{ rbenv.install_dir }}shims/gem user_install=no
  with_dict: "{{ rbenv.gem }}"
  ignore_errors: yes